{"version":3,"sources":["webpack:///./src/images/big_unicorn_fade.png","webpack:///./src/apollo/queries.js","webpack:///./src/components/protocolData.js","webpack:///./src/components/utils.js","webpack:///./src/pages/index.js","webpack:///./src/components/button.js","webpack:///./src/images/noise.png"],"names":["module","exports","GLOBAL_QUERY","gql","StyledSectionFlex","styled","div","wrapSmall","Numbers","BigNumbers","ProtocolData","globalData","useQuery","pollInterval","client","data","volume","uniswapFactory","totalVolumeUSD","transactions","txCount","formattedVol","Intl","NumberFormat","style","currency","notation","compactDisplay","format","formattedTransactions","id","flexDirection","display","width","justifyContent","alignItems","margin","opacity","fontSize","CardBGImage","span","isDark","uImage","desaturate","CardNoise","noise","CardFade","theme","gradientBG","StyledExternalLink","Link","textColor","a","cardBG","BGCard","heroBG","StyledBody","colors","grey2","StyledTitle","StyledBodyTitle","h1","StyledBodySubTitle","h2","StyledBodySubText","h3","StyledBannerImage","Img","shadows","huge","StyledProductImage","StyledItemRow","nav","StyledHeroImage","StyledImgSection","link","MiniNewInfo","NewPill","invertedTextColor","newPill","StyledSectionTitle","IndexPage","props","useDarkMode","path","location","pathname","title","description","to","fadeIn","fluid","thin","childImageSharp","marginBottom","background","color","target","href","outlined","as","DeveloperSection","banner","ProductsSection","socks","info","swap","tokenlists","sybil","paddingBottom","paddingTop","discord","twitter","discourse","reddit","ButtonStyles","css","buttonBorder","Button"],"mappings":"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","file":"component---src-pages-index-js-ec5fe53fb6a31d0394ca.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/big_unicorn_fade-ecb29d0a11b10f10ad3f9b3ae4c3d453.png\";","import gql from 'graphql-tag'\n\nexport const GLOBAL_QUERY = gql`\n  {\n    uniswapFactory(id: \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      pairCount\n      txCount\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { client } from '../apollo/client'\nimport { GLOBAL_QUERY } from '../apollo/queries'\n\nconst StyledSectionFlex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  max-width: 960px;\n  width: 100%;\n  @media (max-width: 1024px) {\n    padding: 1rem;\n    margin-top: 0rem;\n    flex-direction: ${({ wrapSmall }) => (!wrapSmall ? 'row' : 'column')};\n  }\n  @media (max-width: 960px) {\n    padding: 1rem;\n    margin-left: 0;\n    margin-top: 0rem;\n    width: 100%;\n    flex-direction: column;\n  }\n  @media (max-width: 640px) {\n    display: none;\n  }\n  h1,\n  h2 {\n    max-width: 650px;\n  }\n  p {\n    max-width: 650px;\n  }\n`\n\nconst Numbers = styled(StyledSectionFlex)`\n  @media (max-width: 960px) {\n    /* display: none; */\n  }\n`\n\nconst BigNumbers = styled(StyledSectionFlex)`\n  font-size: 48px;\n  font-weight: 700;\n  flex-direction: column;\n  @media (max-width: 960px) {\n    font-size: 32px;\n  }\n`\n\nexport const GET_BLOCK = gql`\n  query blocks($timestamp: Int!) {\n    blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: $timestamp }) {\n      id\n      number\n      timestamp\n    }\n  }\n`\n\nexport const ETH_PRICE = block => {\n  const queryString = block\n    ? `\n    query bundles {\n      bundles(where: { id: ${1} } block: {number: ${block}}) {\n        id\n        ethPrice\n      }\n    }\n  `\n    : ` query bundles {\n      bundles(where: { id: ${1} }) {\n        id\n        ethPrice\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nconst ProtocolData = () => {\n  const { data: globalData } = useQuery(GLOBAL_QUERY, { pollInterval: 10000, client: client })\n\n  // hardcode at 1B in case of data failure\n  const volume = globalData ? globalData?.uniswapFactory?.totalVolumeUSD : 100000000000\n  const transactions = globalData ? globalData?.uniswapFactory?.txCount : 29000000\n\n  const formattedVol = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    notation: 'compact',\n    compactDisplay: 'short'\n    // maximumSignificantDigits: 5\n  }).format(volume)\n\n  const formattedTransactions = new Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    compactDisplay: 'short'\n    // maximumSignificantDigits: 5\n  }).format(transactions)\n\n  return (\n    <Numbers id=\"about\" style={{ flexDirection: 'column' }}>\n      <div style={{ display: 'flex', width: '100%', justifyContent: 'space-between', alignItems: 'center', margin: 0 }}>\n        <BigNumbers>\n          <span>\n            {formattedVol}\n            <span style={{ opacity: '0.1' }}>+</span>\n          </span>\n          <p style={{ fontSize: '14px' }}>All Time Volume</p>\n        </BigNumbers>\n        <BigNumbers>\n          <span>\n            72K<span style={{ opacity: '0.1' }}>+</span>\n          </span>\n          <p style={{ fontSize: '14px' }}>Liquidity Providers</p>\n        </BigNumbers>\n        <BigNumbers>\n          <span>\n            {formattedTransactions}\n            <span style={{ opacity: '0.1' }}>+</span>\n          </span>\n          <p style={{ fontSize: '14px' }}>All Time Trades</p>\n        </BigNumbers>\n        <BigNumbers>\n          <span>\n            200<span style={{ opacity: '0.1' }}>+</span>\n          </span>\n          <p style={{ fontSize: '14px' }}>Defi Integrations</p>\n        </BigNumbers>\n      </div>\n    </Numbers>\n  )\n}\n\nexport default ProtocolData\n","import styled from 'styled-components'\nimport uImage from '../images/big_unicorn_fade.png'\nimport noise from '../images/noise.png'\nimport { Link } from 'gatsby'\n\nexport const CardBGImage = styled.span`\n  mix-blend-mode: ${({ isDark }) => (isDark ? 'overlay' : 'lighten')};\n  background: url(${uImage});\n  width: 100%;\n  height: 100%;\n  opacity: 0.5;\n  background-size: contain;\n  position: absolute;\n  left: 0;\n  background-repeat: no-repeat;\n\n  top: 0;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`};\n  @media (max-width: 960px) {\n    background-repeat: no-repeat;\n  }\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  mix-blend-mode: overlay;\n  width: 100%;\n  height: 100%;\n  /* max-width: 1000px; */\n  opacity: 0.3;\n  position: absolute;\n  left: 0;\n  top: 0;\n  user-select: none;\n  z-index: 99;\n`\n\nexport const CardFade = styled.span`\n  /* mix-blend-mode: overlay; */\n  width: 100%;\n  height: 100%;\n  background: ${({ theme }) => theme.gradientBG};\n  /* max-width: 1000px; */\n  position: absolute;\n  left: 0;\n  top: 0;\n  user-select: none;\n  z-index: 99;\n  @media (max-width: 960px) {\n    height: 125vh;\n  }\n`\n\nexport const StyledLink = styled(Link)`\n  font-family: 'GT Haptik Regular';\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  margin: 0.25rem 0;\n  display: block;\n  width: 100%;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  width: fit-content;\n  color: ${({ theme }) => theme.textColor};\n  transition: transform 0.45s cubic-bezier(0.19, 1, 0.22, 1);\n\n  :hover {\n    transform: translate3d(2px, 2px, 10px);\n  }\n  @media (max-width: 960px) {\n    font-size: 20px;\n  }\n`\nexport const StyledExternalLink = styled.a`\n  font-family: 'GT Haptik Regular';\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  display: block;\n  margin: 0.25rem 0;\n  font-size: 24px;\n  width: 100%;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: fit-content;\n  color: ${({ theme }) => theme.textColor};\n  background-color: ${({ theme }) => theme.cardBG};\n  border-radius: 12px;\n  transition: transform 0.45s cubic-bezier(0.19, 1, 0.22, 1);\n\n  :hover {\n    transform: translate3d(2px, 2px, 10px);\n  }\n  @media (max-width: 960px) {\n    font-size: 20px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Layout from '../layouts'\nimport SEO from '../components/seo'\nimport BG from '../components/bg'\nimport { Button } from '../components/button'\nimport Wizard from '../components/wizard'\nimport ProtocolData from '../components/protocolData'\nimport { useDarkMode } from '../contexts/Application'\nimport { CardBGImage, CardFade, CardNoise, StyledExternalLink } from '../components/utils'\n\nconst BGCard = styled.span`\n  width: 100vw;\n  height: 100vh;\n  /* max-width: 1200px; */\n  max-height: 1220px;\n  user-select: none;\n  background-repeat: no-repeat;\n  background: ${({ theme }) => theme.heroBG};\n  background-size: contain;\n  opacity: 0.2;\n  @media (max-width: 960px) {\n    width: 100vw;\n    height: 100vh;\n    max-height: 1220px;\n  }\n`\n\nconst StyledBody = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 12rem;\n  margin-bottom: 4rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grey2};\n  @media (max-width: 960px) {\n    margin-bottom: 0;\n    padding: 2rem;\n    padding-bottom: 8rem;\n  }\n`\n\nconst StyledTitle = styled.div`\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  justify-content: center;\n  will-change: transform;\n  /* margin: 3rem 0 4rem 0; */\n  margin: 0 auto;\n  margin-bottom: 6rem;\n  @media (max-width: 960px) {\n    margin: 0 auto;\n\n    /* margin: 3rem 0 1rem 0; */\n    /* margin-bottom: 4rem; */\n  }\n`\n\nconst StyledBodyTitle = styled.h1`\n  font-size: 104px;\n  margin: 4rem auto;\n  pointer-events: none;\n  white-space: wrap;\n  overflow-wrap: normal;\n  max-width: 900px;\n  text-align: center;\n  font-family: 'GT Haptik Regular';\n  @media (max-width: 1024px) {\n    margin: 2rem 0 3rem 0;\n  }\n\n  @media (max-width: 640px) {\n    width: 100%;\n    margin: 2rem 0 2rem 0;\n    font-weight: 500;\n    text-align: left;\n    font-size: 58px;\n  }\n\n  @media (max-width: 440px) {\n    font-weight: 500;\n    text-align: left;\n    font-size: 52px;\n  }\n`\nconst StyledBodySubTitle = styled.h2`\n  @media (max-width: 640px) {\n    text-align: left;\n  }\n`\n\nconst StyledBodySubText = styled.h3`\n  max-width: 960px;\n  text-align: center;\n  line-height: 160%;\n  @media (max-width: 640px) {\n    text-align: left;\n  }\n`\n\nconst StyledBannerImage = styled(Img)`\n  width: 100%;\n  height: 100%;\n  min-width: 260px;\n  max-width: 720px;\n  background-color: none;\n  margin-top: 1rem;\n  border-radius: 12px;\n  box-shadow: ${({ theme }) => theme.shadows.huge};\n  @media (max-width: 960px) {\n    min-width: unset;\n  }\n`\n\nconst StyledProductImage = styled(Img)`\n  width: 100%;\n  height: 100%;\n  min-width: 220px;\n  max-width: 220px;\n  background-color: none;\n  border-radius: 12px;\n  box-shadow: ${({ theme }) => theme.shadows.huge};\n`\n\nconst StyledSectionFlex = styled.div`\n  padding: 4rem 0;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media (max-width: 1024px) {\n    padding: 1rem;\n    margin-top: 0rem;\n    flex-direction: ${({ wrapSmall }) => (!wrapSmall ? 'row' : 'column')};\n  }\n\n  @media (max-width: 960px) {\n    padding: 1rem;\n    margin-top: 0rem;\n    width: 100%;\n    max-width: 450px;\n  }\n\n  h2 {\n    margin-bottom: 0.5rem;\n  }\n  p {\n    margin-bottom: 0.5rem;\n  }\n`\n\nconst StyledItemRow = styled.nav`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  margin: 0rem;\n  width: 100%;\n  & > *:not(:first-of-type) {\n    margin-top: 12px;\n  }\n  @media (min-width: 640px) {\n    flex-direction: row;\n    justify-content: center;\n    & > * {\n      margin-bottom: 12px;\n    }\n    & > *:not(:first-of-type) {\n      margin-top: 0;\n      margin-left: 12px;\n    }\n  }\n  @media (min-width: 960px) {\n    box-sizing: border-box;\n    transition: right 0.25s ease;\n  }\n`\n\nconst StyledHeroImage = styled(Img)`\n  width: 75vw;\n  height: 360px;\n  /* max-width: 960px; */\n  background-color: none;\n  border-radius: 12px;\n  margin-top: 1rem;\n  @media (max-width: 960px) {\n    width: auto;\n    height: 360px;\n  }\n`\n\nconst StyledImgSection = styled.div`\n  color: ${({ theme }) => theme.colors.link};\n  position: relative;\n  margin: 6rem 0 1rem 0;\n  @media (max-width: 960px) {\n    width: 100%;\n    margin: 0;\n    p {\n      max-width: 450px;\n    }\n    h1 {\n      max-width: 450px;\n    }\n  }\n  p {\n    line-height: 155%;\n    margin-bottom: 2rem;\n    max-width: 450px;\n  }\n  h1 {\n    max-width: 450px;\n    line-height: 1.3;\n  }\n  h2 {\n    max-width: 450px;\n    line-height: 1.3;\n    margin-bottom: 1rem;\n  }\n`\n\nconst MiniNewInfo = styled(Link)`\n  transform: rotate(-2deg) scale(0.98);\n  color: ${({ theme }) => theme.textColor};\n  display: inline-block;\n  height: 500px;\n  transition: transform 0.3s ease;\n  will-change: transform;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  :hover {\n    transform: rotate(-1deg);\n  }\n  a {\n    color: ${({ theme }) => theme.textColor};\n  }\n  @media (max-width: 960px) {\n    position: relative;\n    max-width: 450px;\n    width: 100%;\n    height: 100%;\n    margin: 4rem 0;\n    transform: rotate(-2deg);\n  }\n`\n\nconst NewPill = styled.span`\n  float: left;\n  color: ${({ theme }) => theme.invertedTextColor};\n  background: ${({ theme }) => theme.newPill};\n  padding: 0.15rem 0.75rem;\n  border-radius: 0.5em;\n  text-align: center;\n  margin: 0;\n  margin-right: 1rem;\n  font-weight: 400;\n`\n\nconst IndexPage = props => {\n  const isDark = useDarkMode()\n\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          siteUrl\n        }\n      }\n      newYear: file(relativePath: { eq: \"newyear.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid_noBase64\n          }\n        }\n      }\n      banner: file(relativePath: { eq: \"Banner.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid_noBase64\n          }\n        }\n      }\n      swap: file(relativePath: { eq: \"swap.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      info: file(relativePath: { eq: \"info.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      socks: file(relativePath: { eq: \"socks.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      sybil: file(relativePath: { eq: \"sybil.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      tokenlists: file(relativePath: { eq: \"tokenlists.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      discord: file(relativePath: { eq: \"discord.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      twitter: file(relativePath: { eq: \"twitter.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      reddit: file(relativePath: { eq: \"reddit.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      discourse: file(relativePath: { eq: \"discourse.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      thin: file(relativePath: { eq: \"thin.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout path={props.location.pathname}>\n      <BGCard>\n        <CardNoise />\n        <CardBGImage isDark={isDark} />\n        <CardFade />\n      </BGCard>\n      <SEO\n        title=\"Home\"\n        path={props.location.pathname}\n        description={'A inventor of the blockchain 3.0 technology on byteco'}\n      />\n      <StyledBody>\n        <StyledTitle>\n          <StyledImgSection>\n            <MiniNewInfo to=\"/blog/byteco-ecosystem/\">\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <NewPill>Byteco Ecosystem</NewPill>\n                More details ↗\n              </div>\n              <StyledHeroImage fadeIn={false} fluid={props.data.thin.childImageSharp.fluid} />\n            </MiniNewInfo>\n          </StyledImgSection>\n          <StyledBodyTitle>Blockchain 3.0 technology Protocol</StyledBodyTitle>\n          <StyledBodySubTitle style={{ marginBottom: '3rem' }}>\n            Guaranteed liquidity for millions of users and hundreds of Byteco applications.\n          </StyledBodySubTitle>\n\n          <StyledItemRow>\n            <Button\n              style={{\n                background: `linear-gradient(128.17deg, #BD00FF -14.78%, #FF1F8A 110.05%)`,\n                color: 'white',\n                fontSize: '20px'\n              }}\n              target=\"_blank\"\n              href=\"https://app.byteco.org/\"\n            >\n              Use Byteco\n            </Button>\n            <Button\n              outlined\n              to=\"/docs\"\n              as={Link}\n              style={{\n                fontSize: '20px'\n              }}\n            >\n              Documentation\n            </Button>\n            <Button\n              outlined\n              to=\"/faq\"\n              as={Link}\n              style={{\n                fontSize: '20px'\n              }}\n            >\n              FAQ\n            </Button>\n          </StyledItemRow>\n        </StyledTitle>\n        <ProtocolData />\n        <DeveloperSection data={data} props={props} />\n        <ProductsSection data={data} props={props} />\n      </StyledBody>\n      <BG />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nconst StyledSectionTitle = styled.h1`\n  font-size: 48px;\n  white-space: wrap;\n  overflow-wrap: normal;\n  max-width: 900px;\n  text-align: center;\n  font-family: 'GT Haptik Regular';\n  margin-top: 10rem;\n\n  @media (max-width: 960px) {\n    width: 100%;\n    font-size: 2rem;\n    line-height: 2.5rem;\n    max-width: 600px;\n    margin-top: 4rem;\n  }\n  @media (max-width: 640px) {\n    width: 100%;\n    font-weight: 400;\n    margin-top: 4rem;\n    text-align: left;\n  }\n`\n\nconst DeveloperSection = props => {\n  return (\n    <>\n      <StyledSectionTitle>A growing protocol ecosystem.</StyledSectionTitle>\n      <StyledBodySubText>\n        The Byteco protocol encourage the application developers, miner, coin holder, blockchain enthusiasts,\n        internet enthusiasts joint construction.\n      </StyledBodySubText>\n      <StyledBannerImage fadeIn={false} fluid={props.data.banner.childImageSharp.fluid} />\n    </>\n  )\n}\n\nconst ProductsSection = props => {\n  return (\n    <>\n      <StyledSectionTitle>A suite of modules for block 3.0.</StyledSectionTitle>\n      <StyledBodySubText>\n        We build state of the art open source apps to access the Byteco protocol and contribute to the world of\n        block 3.0.\n      </StyledBodySubText>\n      <StyledItemRow>\n        <StyledExternalLink href={'https://socks.byteco.org'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.socks.childImageSharp.fluid} />\n        </StyledExternalLink>\n        <StyledExternalLink href={'https://info.byteco.org'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.info.childImageSharp.fluid} />\n        </StyledExternalLink>\n        <StyledExternalLink href={'https://app.byteco.org'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.swap.childImageSharp.fluid} />\n        </StyledExternalLink>\n        <StyledExternalLink href={'https://byteco.org'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.tokenlists.childImageSharp.fluid} />\n        </StyledExternalLink>\n        <StyledExternalLink href={'https://sybil.org'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.sybil.childImageSharp.fluid} />\n        </StyledExternalLink>\n      </StyledItemRow>\n\n      <StyledSectionTitle>Superpowers for application developers.</StyledSectionTitle>\n      <StyledBodySubText>\n        Check out the <Link to=\"/docs/v2/\">documentation</Link>, the{' '}\n        <Link to=\"/docs/v2/artificial-intelligence/quick-start/\">quick start</Link> or a guide below to integrate your project\n        with thousands of the models of AI.\n      </StyledBodySubText>\n      <StyledSectionFlex style={{ paddingBottom: '0px', paddingTop: '1rem' }}>\n        <Wizard />\n      </StyledSectionFlex>\n\n      <StyledSectionTitle>A global community.</StyledSectionTitle>\n      <StyledBodySubText>\n        Learn more about Byteco, chat with the team, others in the community, and have your say in shaping the future\n        of the Byteco protocol.\n      </StyledBodySubText>\n      <StyledItemRow>\n        <StyledExternalLink href={'https://discord.gg/3hrztFW8'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.discord.childImageSharp.fluid} />\n        </StyledExternalLink>\n        <StyledExternalLink href={'https://twitter.com/Byteco-org'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.twitter.childImageSharp.fluid} />\n        </StyledExternalLink>\n        <StyledExternalLink href={'https://gov.byteco.org/'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.discourse.childImageSharp.fluid} />\n        </StyledExternalLink>\n        <StyledExternalLink href={'https://www.reddit.com/r/Byteco'} target=\"_blank\">\n          <StyledProductImage fadeIn={false} fluid={props.data.reddit.childImageSharp.fluid} />\n        </StyledExternalLink>\n      </StyledItemRow>\n    </>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nconst ButtonStyles = css`\n  padding: 0.35rem 0.85rem;\n  text-decoration: none;\n  border-radius: 12px;\n  display: inline-block;\n  transform: scale(0.98);\n  transition: transform 0.25s ease;\n  box-sizing: border-box;\n  font-weight: 600;\n  font-size: 1.125rem;\n  cursor: pointer;\n  width: fit-content;\n  @media (max-width: 960px) {\n    /* margin: 0 0.5rem 0 0.5rem; */\n    text-align: center;\n    text-decoration: none;\n    padding: 0.25rem 1rem;\n  }\n  @media (max-width: 640px) {\n    width: 100%;\n    padding: 0.85rem 0.85rem;\n  }\n  :hover {\n    transform: scale(1);\n  }\n  background-color: ${({ outlined, theme }) => (outlined ? 'none' : theme.textColor)};\n  color: ${({ outlined, theme }) => (outlined ? theme.textColor : theme.invertedTextColor)};\n  border: ${({ outlined, theme }) => (outlined ? `1px solid ${theme.buttonBorder}` : 'initial')};\n`\n\nexport const Button = styled.a`\n  ${ButtonStyles};\n`\n\nexport default Button\n","module.exports = __webpack_public_path__ + \"static/noise-17ab2292f09e7d21aa126b0d0cd2f154.png\";"],"sourceRoot":""}