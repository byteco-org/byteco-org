{"version":3,"sources":["webpack:///./src/layouts/docs.js","webpack:///./node_modules/github-slugger/node_modules/emoji-regex/index.js","webpack:///./node_modules/github-slugger/index.js","webpack:///./src/components/toc.js","webpack:///./src/components/seo.js"],"names":["StyledDocs","styled","div","StyledMDX","theme","colors","link","grey2","grey8","StyledDocsNavWrapper","ul","StyledDocsNav","li","textColor","StyledLink","Link","StyledPageTitle","grey6","StyledGithubIcon","Github","grey9","StyledGithubLink","a","Docs","props","data","isV1","path","slice","isMobile","useMediaQuery","location","pathname","isDocs","title","pageContext","frontmatter","allMdx","edges","filter","node","fields","slug","map","subDir","replace","t","toUpperCase","key","site","description","excerpt","id","parent","style","marginBottom","rawSlug","split","display","href","siteMetadata","repository","commit","children","next","previous","parentDir","alignItems","to","rel","headings","width","height","module","exports","emoji","BananaSlug","own","Object","hasOwnProperty","whitespace","specials","this","reset","slugger","string","maintainCase","toLowerCase","trim","prototype","value","originalSlug","call","occurrences","create","Slugger","StyledHeadingListElement","depth","StyledHeadingLink","StyledTOC","Heading","heading","onClick","offset","document","querySelector","getBoundingClientRect","top","window","scrollY","scroll","left","history","pushState","TableofContents","i","SEO","lang","metaDescription","htmlAttributes","titleTemplate","charSet","name","content","property","siteUrl","type","defaultProps","meta"],"mappings":"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","file":"641b94f8a785f68a2674871bf3be6feeca7ccea8-8478a2d3ab08a8683f21.js","sourcesContent":["import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Layout from '.'\nimport SidebarV2 from '../components/sidebarV2'\nimport SidebarV1 from '../components/sidebarV1'\nimport SEO from '../components/seo'\nimport TableofContents from '../components/toc'\nimport Github from '../images/githubicon.inline.svg'\nimport { GlobalStyle } from '../styles/theme'\nimport '../styles/prism-github.css'\nimport { useMediaQuery } from '@react-hook/media-query'\n\nconst StyledDocs = styled.div`\n  display: grid;\n  grid-template-columns: 280px 1fr 180px;\n  justify-content: space-between;\n  padding: 0 2rem;\n  padding-bottom: 4rem;\n  margin-bottom: 4rem;\n  padding-top: 2rem;\n\n  @media (max-width: 960px) {\n    flex-direction: column;\n    grid-template-columns: 1fr;\n    margin-top: 0rem;\n    padding-top: 80px;\n  }\n`\n\nconst StyledMDX = styled.div`\n  min-width: 550px;\n  max-width: 75% !important;\n  padding: 0;\n  margin: 0 auto;\n  margin-top: 4rem;\n  a {\n    color: ${({ theme }) => theme.colors.link};\n  }\n\n  code {\n    background-color: ${({ theme }) => theme.colors.grey2};\n    color: ${({ theme }) => theme.colors.grey8};\n  }\n\n  @media (max-width: 960px) {\n    min-width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst StyledDocsNavWrapper = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  margin-top: 2rem;\n  padding-top: 3rem;\n`\nconst StyledDocsNav = styled.li`\n  @media (max-width: 960px) {\n    width: 100%;\n  }\n  a {\n    color: ${({ theme }) => theme.textColor};\n  }\n`\n\nconst StyledLink = styled(Link)`\n  font-size: 1.25rem;\n  border: 1px solid ${({ theme }) => theme.colors.grey2};\n  border-radius: 0.25rem;\n  padding: 0.5rem 1rem;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  small {\n    font-size: 0.75rem;\n    opacity: 0.6;\n  }\n`\n\nconst StyledPageTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  /* align-items: center; */\n\n  h1 {\n    font-size: 2.5rem !important;\n    margin-top: 0px !important;\n  }\n\n  a {\n    color: ${({ theme }) => theme.colors.grey6};\n    display: inherit;\n    font-size: 0.825rem;\n  }\n`\n\nconst StyledGithubIcon = styled(Github)`\n  width: 16px;\n  margin-right: 6px;\n  path {\n    fill: ${({ theme }) => theme.colors.grey9};\n  }\n\n  :before {\n    bottom: 0px;\n    left: 0;\n    width: 100%;\n    height: 1px;\n\n    content: ' ';\n    position: absolute;\n    background-color: ${({ theme }) => theme.colors.grey9};\n    opacity: 0.2;\n  }\n`\n\nconst StyledGithubLink = styled.a`\n  padding-bottom: 1.5rem;\n`\n\nconst Docs = props => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          commit\n          repository\n        }\n      }\n      allMdx(filter: { fileAbsolutePath: { regex: \"/docs/\" } }, sort: { order: ASC, fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 40)\n            headings {\n              value\n              depth\n            }\n            frontmatter {\n              title\n            }\n            fields {\n              slug\n              subDir\n              rawSlug\n              parentDir\n            }\n          }\n          next {\n            frontmatter {\n              title\n            }\n            fields {\n              slug\n              subDir\n              parentDir\n              topLevelDir\n            }\n          }\n          previous {\n            frontmatter {\n              title\n            }\n            fields {\n              slug\n              parentDir\n              subDir\n              topLevelDir\n            }\n          }\n        }\n      }\n    }\n  `)\n  const isV1 = props.path.slice(0, 8) === '/docs/v1'\n\n  const isMobile = useMediaQuery('(max-width: 960px)')\n\n  return (\n    <Layout path={props.location.pathname} isDocs={true}>\n      <SEO title={props.pageContext.frontmatter.title} path={props.location.pathname} />\n      <GlobalStyle />\n      {data.allMdx.edges\n        .filter(({ node }) => {\n          return node.fields.slug === props.path\n        })\n        .map(({ node }) => {\n          const title = node.fields.subDir\n            .replace(/\\d+-/g, '')\n            .replace(/-/g, ' ')\n            .replace(/(^|\\s)\\S/g, function(t) {\n              return t.toUpperCase()\n            })\n          return (\n            <SEO\n              key={node.fields.slug}\n              title={props.pageContext.frontmatter.title}\n              site={'Byteco ' + title}\n              path={props.location.pathname}\n              description={node.excerpt}\n            />\n          )\n        })}\n      <StyledDocs id=\"docs-header\">\n        {!isMobile && (isV1 ? <SidebarV1 parent={'/docs/'} {...props} /> : <SidebarV2 parent={'/docs/'} {...props} />)}\n        <StyledMDX>\n          <StyledPageTitle>\n            <small style={{ marginBottom: '.5rem' }}>\n              {data.allMdx.edges\n                .filter(({ node }) => {\n                  return node.fields.slug === props.path && node.fields.slug !== '/docs/v2/'\n                })\n                .map(({ node }) => {\n                  return node.fields.rawSlug\n                    .split('/')[3]\n                    .replace(/\\d+-/g, '')\n                    .replace(/-/g, ' ')\n                    .replace(/(^|\\s)\\S/g, function(t) {\n                      return t.toUpperCase()\n                    })\n                })}\n            </small>\n            <h1>{props.pageContext.frontmatter.title}</h1>\n            <div style={{ display: 'flex' }}>\n              {data.allMdx.edges\n                .filter(({ node }) => {\n                  return node.fields.slug === props.path && node.fields.slug !== '/docs/v2/'\n                })\n                .map(({ node }) => {\n                  return (\n                    <StyledGithubLink\n                      key={node.id}\n                      href={\n                        data.site.siteMetadata.repository +\n                        '/tree/' +\n                        data.site.siteMetadata.commit +\n                        '/src/pages' +\n                        node.fields.rawSlug.slice(0, -1) +\n                        '.md'\n                      }\n                    >\n                      <StyledGithubIcon /> Improve this article\n                    </StyledGithubLink>\n                  )\n                })}\n            </div>\n          </StyledPageTitle>\n\n          {props.children}\n\n          {data.allMdx.edges\n            .filter(({ node }) => {\n              return node.fields.slug === props.path\n            })\n            .map(({ node, next, previous }) => {\n              return (\n                <StyledDocsNavWrapper key={node.id}>\n                  <StyledDocsNav>\n                    {/* index.md file is considered the \"last\" based on the sort order. Check to remove links when not relevent */}\n                    {previous &&\n                      node.fields.slug !== '/docs/v2/' &&\n                      previous.fields.parentDir === node.fields.parentDir && (\n                        <StyledLink style={{ alignItems: 'flex-end' }} to={previous.fields.slug} rel=\"prev\">\n                          <small>Previous</small>\n                          <span>← {previous.frontmatter.title}</span>\n                        </StyledLink>\n                      )}\n                  </StyledDocsNav>\n                  <StyledDocsNav>\n                    {/* index.md file is considered the \"last\" based on the sort order. Check to remove when not relevent */}\n                    {next && next.fields.slug !== '/docs/v2/' && next.fields.parentDir === node.fields.parentDir && (\n                      <StyledLink style={{ alignItems: 'flex-start' }} to={next.fields.slug} rel=\"next\">\n                        <small>Next</small>\n                        <span>{next.frontmatter.title} →</span>\n                      </StyledLink>\n                    )}\n                    {node.fields.slug === '/docs/v2/' && (\n                      <StyledLink style={{ alignItems: 'flex-start' }} to={'/docs/v2/protocol-overview/'} rel=\"next\">\n                        <small>Next</small>\n                        <span>How Byteco works →</span>\n                      </StyledLink>\n                    )}\n                  </StyledDocsNav>\n                </StyledDocsNavWrapper>\n              )\n            })}\n        </StyledMDX>\n\n        {data ? (\n          data.allMdx.edges\n            .filter(({ node }) => {\n              return node.fields.slug === props.path\n            })\n            .map(({ node }) => {\n              return <TableofContents path={props.path} key={node.id} headings={node.headings} />\n            })\n        ) : (\n          <div style={{ width: '160px', height: '60px' }}></div>\n        )}\n      </StyledDocs>\n    </Layout>\n  )\n}\n\nexport default Docs\n","module.exports = function () {\n  return /[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uD83C\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uD83C\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uD83C\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF8\\uDDFE\\uDDFF]|\\uD83C\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uD83C\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uD83C\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uD83C\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uD83C\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uD83C\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uD83C\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uD83C\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uD83C\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uD83C\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uD83C\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uD83C\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uD83C\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uD83C\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|[#\\*0-9]\\u20E3/g;\n};","require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nvar emoji = require('emoji-regex');\n\nmodule.exports = BananaSlug;\nvar own = Object.hasOwnProperty;\nvar whitespace = /\\s/g;\nvar specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g;\n\nfunction BananaSlug() {\n  var self = this;\n  if (!(self instanceof BananaSlug)) return new BananaSlug();\n  self.reset();\n}\n/**\r\n * Generate a unique slug.\r\n * @param  {string} value String of text to slugify\r\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\r\n * @return {string}       A unique slug string\r\n */\n\n\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  var self = this;\n  var slug = slugger(value, maintainCase === true);\n  var originalSlug = slug;\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++;\n    slug = originalSlug + '-' + self.occurrences[originalSlug];\n  }\n\n  self.occurrences[slug] = 0;\n  return slug;\n};\n/**\r\n * Reset - Forget all previous slugs\r\n * @return void\r\n */\n\n\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null);\n};\n\nfunction slugger(string, maintainCase) {\n  if (typeof string !== 'string') return '';\n  if (!maintainCase) string = string.toLowerCase();\n  return string.trim().replace(specials, '').replace(emoji(), '').replace(whitespace, '-');\n}\n\nBananaSlug.slug = slugger;","import React from 'react'\nimport styled from 'styled-components'\n\nimport Slugger from 'github-slugger'\n\nconst slugger = new Slugger()\n\nconst StyledHeadingListElement = styled.li`\n  margin-left: ${({ depth }) => depth && depth / 2 + 'rem'};\n  margin-bottom: 0px;\n  margin-top: 0.125rem;\n\n  margin-bottom: 0.125rem;\n`\n\nconst StyledHeadingLink = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.textColor};\n  white-space: pre;\n  text-overflow: ellipsis;\n  cursor: pointer;\n\n  :hover {\n    text-decoration: underline;\n  }\n`\n\nconst StyledTOC = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  position: -webkit-sticky;\n  position: sticky;\n  align-self: flex-start;\n  top: 6rem;\n  min-width: 180px;\n  max-height: 70vh;\n  overflow: auto;\n  font-size: 0.75rem;\n  margin: 0 2rem 0 0;\n  opacity: 0.6;\n  transition: opacity 0.3s ease;\n  list-style: none;\n  text-decoration: none;\n  border-left: 1px solid ${({ theme }) => theme.colors.grey2};\n\n  :hover {\n    opacity: 1;\n  }\n\n  li {\n    padding: 0;\n  }\n\n  @media (max-width: 960px) {\n    display: none;\n  }\n`\n\nconst Heading = ({ heading }) => {\n  const slug = slugger.slug(heading.value.replace(/\\d+-/g, ''))\n  slugger.reset()\n  return (\n    <StyledHeadingListElement key={heading.value} depth={heading.depth}>\n      <StyledHeadingLink\n        onClick={() => {\n          // scrollTo('#' + slug)\n          const id = '#' + slug\n          const anchor = document.querySelector(id)\n          const offset = anchor.getBoundingClientRect().top + window.scrollY\n          window.scroll({ top: offset - 80, left: 0 })\n          window.history.pushState({}, '', '#' + slug)\n        }}\n      >\n        {heading.value}\n      </StyledHeadingLink>\n    </StyledHeadingListElement>\n  )\n}\n\nconst TableofContents = ({ headings }) => (\n  <StyledTOC>\n    {headings.map((heading, i) => (\n      <Heading key={i} heading={heading} />\n    ))}\n  </StyledTOC>\n)\n\nexport default TableofContents\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, title, path }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const uniTitle = 'Byteco'\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} | %s`}\n    >\n      <meta charSet=\"utf-8\" />\n      <html lang=\"en\" />\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={title}></meta>\n\n      <meta property=\"og:title\" content={uniTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content={'byteco-org'} />\n      <meta property=\"og:url\" content={site.siteMetadata.siteUrl + path} />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content=\"@Byteco-org\"></meta>\n      <meta name=\"twitter:site\" content=\"@Byteco-org\" />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <link rel=\"alternate\" type=\"application/rss+xml\" href=\"/rss.xml\" />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}