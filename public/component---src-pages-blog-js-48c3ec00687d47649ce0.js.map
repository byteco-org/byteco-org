{"version":3,"sources":["webpack:///./src/components/bg.js","webpack:///./src/components/seo.js","webpack:///./src/pages/blog.js"],"names":["StyledBG","styled","div","theme","backgroundColor","colors","link","BG","SEO","description","lang","title","path","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","charSet","name","content","property","siteUrl","rel","type","href","defaultProps","meta","StyledBlog","grey2","PostsWrapper","PageTitleWrapper","section","Posts","cardBG","grey3","textColor","PostLinkWrapper","Link","PostTitleWrapper","PostMetaData","p","grey6","StyledImage","Img","shadows","huge","NewPill","white","Blog","props","data","location","pathname","style","fontSize","paddingBottom","target","allMdx","edges","map","index","node","wide","key","id","to","fields","slug","marginTop","frontmatter","previewText","date","readingTime","text","featuredImage","fluid","childImageSharp"],"mappings":"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","file":"component---src-pages-blog-js-48c3ec00687d47649ce0.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledBG = styled.div`\n  position: fixed;\n  z-index: -1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.backgroundColor};\n  -webkit-transform: translate3d(0, 0, 0);\n  height: -webkit-fill-available;\n  opacity: 1;\n  background: ${({ theme }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${theme.colors.link} 0%, ${theme.backgroundColor} 100%)`};\n  opacity: 0.15;\n  /* z-index: 9999; */\n  user-select: none;\n  pointer-events: none;\n`\n\nconst BG = () => {\n  return <StyledBG />\n}\nexport default BG\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, title, path }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const uniTitle = 'Byteco'\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} | %s`}\n    >\n      <meta charSet=\"utf-8\" />\n      <html lang=\"en\" />\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={title}></meta>\n\n      <meta property=\"og:title\" content={uniTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content={'byteco-org'} />\n      <meta property=\"og:url\" content={site.siteMetadata.siteUrl + path} />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content=\"@Byteco-org\"></meta>\n      <meta name=\"twitter:site\" content=\"@Byteco-org\" />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <link rel=\"alternate\" type=\"application/rss+xml\" href=\"/rss.xml\" />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","import React from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nimport Layout from '../layouts'\nimport BG from '../components/bg'\nimport SEO from '../components/seo'\n\nconst StyledBlog = styled.div`\n  padding: 0 2rem;\n  padding-bottom: 4rem;\n  margin-bottom: 4rem;\n  padding-top: 2rem;\n\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grey2};\n\n  @media (max-width: 960px) {\n    flex-direction: column;\n    grid-template-columns: 1fr;\n    margin-top: 0rem;\n  }\n`\n\nconst PostsWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 960px;\n  margin: 0 auto;\n`\n\nconst PageTitleWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  /* justify-content: center; */\n  max-width: 960px;\n  margin: 0 auto;\n  width: 100%;\n  padding: 4rem;\n  @media (max-width: 960px) {\n    padding: 0;\n  }\n`\n\nexport const Posts = styled.div`\n  margin: 1rem 0;\n  position: relative;\n  width: 100%;\n  text-decoration: none;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.cardBG};\n  backdrop-filter: blur(2px);\n  transition: transform 0.45s cubic-bezier(0.19, 1, 0.22, 1);\n  border: 1px solid rgba(0, 0, 0, 0);\n\n  :hover {\n    border: 1px solid ${({ theme }) => theme.colors.grey3};\n  }\n  h1 {\n    max-width: 960px;\n  }\n\n  a {\n    color: ${({ theme }) => theme.textColor};\n  }\n  p {\n    max-width: 450px;\n  }\n  p:last-child {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 960px) {\n    width: 100%;\n  }\n`\n\nexport const PostLinkWrapper = styled(Link)`\n  display: flex;\n  flex-wrap: no-wrap;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  /* > * + * {\n    margin-left: 36px;\n  } */\n  @media (max-width: 960px) {\n    > * + * {\n      margin-left: 0;\n    }\n  }\n`\n\nexport const PostTitleWrapper = styled.div`\n  min-width: 200px;\n  display: flex;\n  flex-direction: column;\n  /* margin-top: 24px; */\n  padding: 2rem;\n  h2 {\n    font-size: 36px;\n  }\n  /* > * + * {\n    margin-left: 24px;\n  } */\n  @media (max-width: 960px) {\n    > * + * {\n      margin-left: 0;\n    }\n  }\n`\n\nexport const PostMetaData = styled.p`\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n  color: ${({ theme }) => theme.colors.grey6};\n  width: 100%;\n  justify-self: flex-end;\n  p {\n    width: initial;\n  }\n`\n\nexport const StyledImage = styled(Img)`\n  width: 100%;\n  border-radius: 12px;\n  height: 420px;\n  box-shadow: ${({ theme }) => theme.shadows.huge};\n  border-radius: 20px;\n  overflow: hidden;\n  @media (max-width: 960px) {\n    height: 256px;\n  }\n`\n\nexport const NewPill = styled.p`\n  color: ${({ theme }) => theme.white};\n  background-color: ${({ theme }) => theme.colors.link};\n  padding: 0rem 0.5rem;\n  position: absolute;\n  left: -1rem;\n  top: -0.75rem;\n  border-radius: 1rem;\n  text-align: center;\n  margin: 0;\n  transform: rotateZ(-20deg);\n  z-index: 99;\n`\n\nconst Blog = props => {\n  const data = useStaticQuery(graphql`\n    {\n      allMdx(filter: { fileAbsolutePath: { regex: \"/blog/\" } }, sort: { order: DESC, fields: frontmatter___date }) {\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 250)\n            frontmatter {\n              date(formatString: \"MMMM Do, YYYY\")\n              title\n              previewText\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            fields {\n              slug\n              readingTime {\n                text\n              }\n            }\n          }\n          next {\n            frontmatter {\n              title\n            }\n            fields {\n              slug\n            }\n          }\n          previous {\n            frontmatter {\n              title\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout path={props.location.pathname}>\n      <BG />\n      <SEO title=\"Byteco Blog\" path={props.location.pathname} />\n\n      <StyledBlog>\n        <PageTitleWrapper>\n          <h2 style={{ fontSize: '56px' }}>Blog</h2>\n          <p>\n            News, stories, and announcements from Byteco.{' '}\n            <a style={{ paddingBottom: '1rem' }} href=\"/rss.xml\" target=\"_blank\">\n              Subscribe\n            </a>\n          </p>\n        </PageTitleWrapper>\n        <PostsWrapper>\n          {data.allMdx.edges.map(({ node }, index) => {\n            return (\n              <Posts wide={index} key={node.id}>\n                <PostLinkWrapper wide={index} to={node.fields.slug}>\n                  {index === 0 && <NewPill>New</NewPill>}\n                  <PostTitleWrapper>\n                    <h2 style={{ marginTop: '0px' }}>{node.frontmatter.title}</h2>\n\n                    {node.frontmatter.previewText ? <p>{node.frontmatter.previewText} </p> : ''}\n\n                    <PostMetaData>{node.frontmatter.date + ' - ' + node.fields.readingTime.text}</PostMetaData>\n                  </PostTitleWrapper>\n                  {node.frontmatter.featuredImage && (\n                    <StyledImage fluid={node.frontmatter.featuredImage.childImageSharp.fluid} />\n                  )}\n                </PostLinkWrapper>\n              </Posts>\n            )\n          })}\n        </PostsWrapper>\n      </StyledBlog>\n    </Layout>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}