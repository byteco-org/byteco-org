{"version":3,"sources":["webpack:///./src/components/bg.js","webpack:///./src/layouts/faq.js","webpack:///./src/pages/faq/index.md","webpack:///./src/components/seo.js"],"names":["StyledBG","styled","div","theme","backgroundColor","colors","link","BG","GlobalStyle","createGlobalStyle","StyledDocs","grey2","StyledMDX","grey6","StyledPageTitle","name","_frontmatter","Info","props","console","warn","layoutProps","MDXLayout","data","path","location","pathname","isDocs","title","pageContext","frontmatter","allMdx","edges","filter","node","fields","slug","map","subDir","replace","t","toUpperCase","key","site","description","excerpt","id","className","style","fontSize","children","MDXContent","components","mdxType","href","parentName","isMDXComponent","SEO","lang","metaDescription","siteMetadata","htmlAttributes","titleTemplate","charSet","content","property","siteUrl","rel","type","defaultProps","meta"],"mappings":"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","file":"component---src-pages-faq-index-md-dcb60fedb6f397845c7f.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledBG = styled.div`\n  position: fixed;\n  z-index: -1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.backgroundColor};\n  -webkit-transform: translate3d(0, 0, 0);\n  height: -webkit-fill-available;\n  opacity: 1;\n  background: ${({ theme }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${theme.colors.link} 0%, ${theme.backgroundColor} 100%)`};\n  opacity: 0.15;\n  /* z-index: 9999; */\n  user-select: none;\n  pointer-events: none;\n`\n\nconst BG = () => {\n  return <StyledBG />\n}\nexport default BG\n","import React from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Layout from '.'\nimport SEO from '../components/seo'\n\nimport BG from '../components/bg'\n\nimport '../styles/prism-github.css'\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-image: none;\n    background-color: ${({ theme }) => theme.backgroundColor};\n}\n`\n\nconst StyledDocs = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 0 2rem;\n  padding-bottom: 4rem;\n  margin-bottom: 4rem;\n  padding-top: 2rem;\n\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grey2};\n  border-top: 1px solid ${({ theme }) => theme.colors.grey2};\n\n  @media (max-width: 960px) {\n    flex-direction: column;\n    grid-template-columns: 1fr;\n    margin-top: 0rem;\n    padding: 1rem;\n  }\n`\n\nconst StyledMDX = styled.div`\n  min-width: 550px;\n  max-width: 650px;\n  padding: 0;\n  margin-bottom: 3rem;\n  a {\n    color: ${({ theme }) => theme.colors.link};\n  }\n\n  figcaption {\n    padding: 0.25rem;\n    font-style: italic;\n    color: ${({ theme }) => theme.colors.grey6};\n    text-align: center;\n  }\n  @media (max-width: 960px) {\n    min-width: 100%;\n    max-width: 100%;\n  }\n\n  h1 {\n    margin-top: 4rem;\n  }\n  h2 {\n    margin-top: 2rem;\n  }\n  blockquote h1 {\n    margin-top: unset;\n    font-style: italic;\n  }\n`\n\nconst StyledPageTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  /* align-items: center; */\n\n  h1 {\n    font-size: 2.5rem !important;\n    margin-top: 0px !important;\n  }\n\n  a {\n    color: ${({ theme }) => theme.colors.grey6};\n    display: inherit;\n    font-size: 0.825rem;\n  }\n`\n\nconst Docs = props => {\n  const data = useStaticQuery(graphql`\n    {\n      allMdx(filter: { fileAbsolutePath: { regex: \"/faq/\" } }, sort: {}) {\n        edges {\n          node {\n            headings {\n              value\n              depth\n            }\n            frontmatter {\n              title\n            }\n            fields {\n              slug\n              subDir\n              rawSlug\n              parentDir\n            }\n            id\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout path={props.location.pathname} isDocs={false}>\n      <BG />\n      <SEO title={props.pageContext.frontmatter.title} path={props.location.pathname} />\n      <GlobalStyle />\n      {data.allMdx.edges\n        .filter(({ node }) => {\n          return node.fields.slug === props.path\n        })\n        .map(({ node }) => {\n          const title = node.fields.subDir\n            .replace(/\\d+-/g, '')\n            .replace(/-/g, ' ')\n            .replace(/(^|\\s)\\S/g, function(t) {\n              return t.toUpperCase()\n            })\n          return (\n            <SEO\n              key={node.fields.slug}\n              title={props.pageContext.frontmatter.title}\n              site={'Byteco ' + title}\n              path={props.location.pathname}\n              description={node.excerpt}\n            />\n          )\n        })}\n      <StyledDocs id=\"docs-header\">\n        <span>\n          <StyledPageTitle>\n            <h1 className={'title'} style={{ fontSize: '72px' }}>\n              {props.pageContext.frontmatter.title}\n            </h1>\n          </StyledPageTitle>\n          <span>\n            <StyledMDX>{props.children}</StyledMDX>\n          </span>\n        </span>\n      </StyledDocs>\n    </Layout>\n  )\n}\n\nexport default Docs\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/Administrator/uniswap-org-master/src/layouts/faq.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Info = makeShortcode(\"Info\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Info mdxType=\"Info\">Didn't find an answer? Join the <a href=\"https://discord.gg/3hrztFW8\">community Discord</a> to get support</Info>\n    <h1 {...{\n      \"id\": \"what-is-byteco\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#what-is-byteco\",\n        \"aria-label\": \"what is byteco permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What is Byteco?`}</h1>\n    <p>{`If you want to dive into details check out the `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/v2/\"\n      }}>{`docs`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"how-do-i-use-byteco\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#how-do-i-use-byteco\",\n        \"aria-label\": \"how do i use byteco permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`How do I use Byteco?`}</h1>\n    <h1 {...{\n      \"id\": \"how-does-byteco-work\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#how-does-byteco-work\",\n        \"aria-label\": \"how does byteco work permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`How does Byteco work?`}</h1>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, title, path }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const uniTitle = 'Byteco'\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} | %s`}\n    >\n      <meta charSet=\"utf-8\" />\n      <html lang=\"en\" />\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={title}></meta>\n\n      <meta property=\"og:title\" content={uniTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content={'byteco-org'} />\n      <meta property=\"og:url\" content={site.siteMetadata.siteUrl + path} />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content=\"@Byteco-org\"></meta>\n      <meta name=\"twitter:site\" content=\"@Byteco-org\" />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <link rel=\"alternate\" type=\"application/rss+xml\" href=\"/rss.xml\" />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}